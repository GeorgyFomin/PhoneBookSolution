// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.MsSql;

#nullable disable

namespace Persistence.MsSql.Migrations.PhonesDB
{
    [DbContext(typeof(PhonesDBContext))]
    [Migration("20220716031921_InitPhonesDB")]
    partial class InitPhonesDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entities.Domain.Phone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Phones");
                });

            modelBuilder.Entity("Entities.Domain.Phone", b =>
                {
                    b.OwnsOne("PhoneNumbers.PhoneNumber", "PhoneNumder", b1 =>
                        {
                            b1.Property<int>("PhoneId")
                                .HasColumnType("int");

                            b1.Property<int>("CountryCode")
                                .HasColumnType("int");

                            b1.Property<int>("CountryCodeSource")
                                .HasColumnType("int");

                            b1.Property<string>("Extension")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool>("HasCountryCode")
                                .HasColumnType("bit");

                            b1.Property<bool>("HasCountryCodeSource")
                                .HasColumnType("bit");

                            b1.Property<bool>("HasExtension")
                                .HasColumnType("bit");

                            b1.Property<bool>("HasItalianLeadingZero")
                                .HasColumnType("bit");

                            b1.Property<bool>("HasNationalNumber")
                                .HasColumnType("bit");

                            b1.Property<bool>("HasNumberOfLeadingZeros")
                                .HasColumnType("bit");

                            b1.Property<bool>("HasPreferredDomesticCarrierCode")
                                .HasColumnType("bit");

                            b1.Property<bool>("HasRawInput")
                                .HasColumnType("bit");

                            b1.Property<bool>("ItalianLeadingZero")
                                .HasColumnType("bit");

                            b1.Property<decimal>("NationalNumber")
                                .HasColumnType("decimal(20,0)");

                            b1.Property<int>("NumberOfLeadingZeros")
                                .HasColumnType("int");

                            b1.Property<string>("PreferredDomesticCarrierCode")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("RawInput")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PhoneId");

                            b1.ToTable("Phones");

                            b1.WithOwner()
                                .HasForeignKey("PhoneId");
                        });

                    b.Navigation("PhoneNumder");
                });
#pragma warning restore 612, 618
        }
    }
}
